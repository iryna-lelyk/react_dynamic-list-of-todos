{"version":3,"sources":["api.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoList","React","memo","todos","selectedTodo","onSelectTodo","className","map","todo","classNames","id","completed","title","type","onClick","TodoFilter","query","status","onChangeStatus","onChangeQuery","reset","useCallback","value","onChange","event","target","placeholder","style","pointerEvents","Loader","TodoModal","useState","currentUser","setCurrentUser","useEffect","userId","href","email","name","App","loadingTodos","setLoadingTodos","setTodos","setSelectedTodo","loadedTodos","setQuery","setStatus","filteredTodos","useMemo","filter","includesQuery","toLocaleLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a2ccd8e3.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectedTodo: Todo | null,\n  onSelectTodo: (selectedTodo: Todo | null) => void,\n};\n\nexport const TodoList: React.FC<Props> = React.memo((\n  { todos, selectedTodo, onSelectTodo },\n) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          data-cy=\"todo\"\n          className={classNames({\n            'has-background-info-light': selectedTodo?.id === todo.id,\n          })}\n          key={todo.id}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n\n          {todo.completed\n            ? (\n              <td className=\"is-vcentered\">\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </td>\n            ) : (\n              <td className=\"is-vcentered\" />\n            )}\n\n          <td className=\"is-vcentered is-expanded\">\n            <p className={classNames(\n              {\n                'has-text-success': todo.completed,\n                'has-text-danger': !todo.completed,\n              },\n            )}\n            >\n              {todo.title}\n            </p>\n          </td>\n\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => {\n                if (selectedTodo?.id === todo.id) {\n                  onSelectTodo(null);\n                } else {\n                  onSelectTodo(todo);\n                }\n              }}\n            >\n              <span className=\"icon\">\n                <i\n                  className={classNames(\n                    'far',\n                    {\n                      'fa-eye': selectedTodo?.id !== todo.id,\n                      'fa-eye-slash': selectedTodo?.id === todo.id,\n                    },\n                  )}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n));\n","import React, { useCallback } from 'react';\n\ntype Props = {\n  query: string,\n  status: string,\n  onChangeStatus: (status: string) => void,\n  onChangeQuery: (query: string) => void,\n};\n\nexport const TodoFilter:React.FC<Props> = React.memo((\n  {\n    query, status, onChangeStatus, onChangeQuery,\n  },\n) => {\n  const reset = useCallback(() => onChangeQuery(''), []);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={status}\n            onChange={event => onChangeStatus(event.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={event => onChangeQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query !== '' && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={reset}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n});\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  selectedTodo: Todo,\n  onSelectTodo: (selectedTodo: Todo | null) => void,\n};\n\nexport const TodoModal: React.FC<Props> = React.memo((\n  { selectedTodo, onSelectTodo },\n) => {\n  const [currentUser, setCurrentUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(selectedTodo.userId).then(setCurrentUser);\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!currentUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => onSelectTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo.completed\n                ? (\n                  <strong className=\"has-text-success\">\n                    Done\n                  </strong>\n                ) : (\n                  <strong className=\"has-text-danger\">\n                    Planned\n                  </strong>\n                )}\n\n              {' by '}\n\n              <a href={`mailto:${currentUser.email}`}>\n                {currentUser.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n});\n","import React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { getTodos } from './api';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [loadingTodos, setLoadingTodos] = useState(true);\n  const [todos, setTodos] = useState<Todo[]>([]);\n\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    getTodos()\n      .then(loadedTodos => {\n        setLoadingTodos(false);\n        setTodos(loadedTodos);\n      });\n  }, []);\n\n  const [query, setQuery] = useState('');\n  const [status, setStatus] = useState('all');\n\n  const filteredTodos = useMemo(() => {\n    return todos.filter(todo => {\n      const includesQuery = todo.title.toLocaleLowerCase()\n        .includes(query.toLocaleLowerCase());\n\n      switch (status) {\n        case 'active':\n          return !todo.completed && includesQuery;\n\n        case 'completed':\n          return todo.completed && includesQuery;\n\n        default:\n          return includesQuery;\n      }\n    });\n  }, [status, query, todos]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                status={status}\n                onChangeStatus={setStatus}\n                onChangeQuery={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loadingTodos\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={filteredTodos}\n                    selectedTodo={selectedTodo}\n                    onSelectTodo={setSelectedTodo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          onSelectTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}